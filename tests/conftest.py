import pytest

from classes.point import Point


@pytest.fixture
def small_point_dataset():
    """Create a small dataset of 2D points."""

    # Create the 2D points
    points = [
        Point(1, 1),
        Point(1, 2),
        Point(1, 4),
        Point(2, 1),
        Point(2, 3),
        Point(3, 2),
        Point(3, 4),
        Point(4, 1),
        Point(4, 3),
        Point(4, 4),
    ]

    return points


@pytest.fixture
def bigger_point_dataset():
    """Create a bigger dataset of 2D points. There are exactly 100 points in the dataset with (x- and y-)coordinates in the interval [-10, 10]. One of these point is in the dataset twice (5,5). All other points are unique."""

    # Create the 2D points
    points = [
        Point(-10, -10),
        Point(-9, -9),
        Point(-8, -8),
        Point(-7, -7),
        Point(-6, -6),
        Point(-5, -5),
        Point(-4, -4),
        Point(-3, -3),
        Point(-2, -2),
        Point(-1, -1),
        Point(0, 0),
        Point(1, 1),
        Point(2, 2),
        Point(3, 3),
        Point(4, 4),
        Point(5, 5),
        Point(6, 6),
        Point(7, 7),
        Point(8, 8),
        Point(9, 9),
        Point(10, 10),
        Point(-10, 10),
        Point(-9, 9),
        Point(-8, 8),
        Point(-7, 7),
        Point(-6, 6),
        Point(5, 5),
        Point(-4, 4),
        Point(-3, 3),
        Point(-2, 2),
        Point(-1, 1),
        Point(0, -1),
        Point(1, -2),
        Point(2, -3),
        Point(3, -4),
        Point(4, -5),
        Point(5, -6),
        Point(6, -7),
        Point(7, -8),
        Point(8, -9),
        Point(9, -10),
        Point(-10, -9),
        Point(-9, -8),
        Point(-8, -7),
        Point(-7, -6),
        Point(-6, -5),
        Point(-5, -4),
        Point(-4, -3),
        Point(-3, -2),
        Point(-2, -1),
        Point(-1, 0),
        Point(0, 1),
        Point(1, 2),
        Point(2, 3),
        Point(3, 4),
        Point(4, 5),
        Point(5, 6),
        Point(6, 7),
        Point(7, 8),
        Point(8, 9),
        Point(9, 10),
        Point(10, -10),
        Point(-9, -10),
        Point(-8, -9),
        Point(-7, -8),
        Point(-6, -7),
        Point(-5, -6),
        Point(-4, -5),
        Point(-3, -4),
        Point(-2, -3),
        Point(-1, -2),
        Point(0, -3),
        Point(1, -4),
        Point(2, -5),
        Point(3, -6),
        Point(4, -7),
        Point(5, -8),
        Point(6, -9),
        Point(7, -10),
        Point(8, -10),
        Point(9, -9),
        Point(10, -8),
        Point(-10, -7),
        Point(-9, -6),
        Point(-8, -5),
        Point(-7, -4),
        Point(-6, -3),
        Point(-5, -2),
        Point(-4, -1),
        Point(-3, 0),
        Point(-2, 1),
        Point(-1, 2),
        Point(0, 3),
        Point(1, 4),
        Point(2, 5),
        Point(3, 6),
        Point(4, 7),
        Point(5, 8),
        Point(6, 9),
        Point(7, 10),
    ]

    return points
